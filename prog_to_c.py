import argparse, sys


def main():

    parser = argparse.ArgumentParser(
        description="Convert a Logisim program into a C source file.\n\nIntended to be used with the Manchester Baby Compiler written by Charles Fox, available at https://gitlab.com/charles.fox/comparch/-/tree/main/chapter07 \n\nVisit https://github.com/krisjdev/pico-baby-if/ for more info.",
        formatter_class=argparse.RawTextHelpFormatter
    )

    parser.add_argument("source", help="Logisim source file")
    parser.add_argument("-o", "--output", help="Output file name", default="program.c")

    args = parser.parse_args()

    try:
        src_file = open(args.source, "r").readlines()
    except Exception as e:
        print(f"Fatal: Failed to open source file: {e}")
        sys.exit(-1)

    src_file_length = len(src_file)

    # remove whitespace
    for i in range(src_file_length):
        src_file[i] = src_file[i].strip()


    if src_file[0] != "v2.0 raw":
        print(f"Error: Missing logisim file header from source file.")
        sys.exit(-1)
        

    try:
        output_file = open(args.output, "w+")
    except Exception as e:
        print(f"Fatal: Failed to open output file: {e}")
        sys.exit(-1)


    output_file.write(f"// File generated by prog_to_c.py\n\n")
    output_file.write(f"uint32_t program[{src_file_length-1}] = " + "{\n")

    for i in range(1, src_file_length):
        if (i % 4 == 1):
            output_file.write(f"\t0x{src_file[i]}, ")
        elif (i % 4 == 0):
            output_file.write(f"0x{src_file[i]},\n")
        else:
            output_file.write(f"0x{src_file[i]}, ")

    output_file.write("};\n")

    output_file.close()


if __name__ == "__main__":
    main()